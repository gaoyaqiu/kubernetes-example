apiVersion: v1
kind: Service
metadata:
  name: spring-boot
  labels:
    app: java
spec:
  type: NodePort
  ports:
    - name: spring-boot-jpa-example
      port: 8084
      targetPort: 8084
  selector:
    app: spring-boot
    tier: frontend
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: java-pvc01
  labels:
    app: java
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot
  labels:
    app: java
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-boot
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: spring-boot
        tier: frontend
    spec:
      containers:
      - name: spring-boot-jpa-example
        image: registry.cn-shanghai.aliyuncs.com/gaoyaqiu/spring-boot-jpa-example:1.2
        env:
          - name: MYSQL_DB_USER
            valueFrom:
              secretKeyRef:
                name: mysql-pass
                key: username
          - name: MYSQL_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-pass
                key: password
          - name: MYSQL_DB_HOST
            value: "java-mysql"
          - name: MYSQL_DB_PORT
            value: "3306"
          - name: "spring_profiles_active"
            value: "k8s"
          - name: "JAVA_OPTS"
            value: "
              -server
              -Xmx256M
              -Xms256M
              "
        ports:
          - containerPort: 8084  
        volumeMounts:
        - name: java-persistent-storage
          mountPath: /data/nfs/logs
      volumes:
      - name: java-persistent-storage
        persistentVolumeClaim:
          claimName: java-pvc01
